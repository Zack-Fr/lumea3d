/* tslint:disable */
/* eslint-disable */
/**
 * Lumea API
 * # Lumea Interior Layout Generator API  Advanced AI-powered interior layout generator with explainable spatial reasoning.  ## Features - **3D Scene Management**: Create and manage complex 3D interior layouts - **Asset Processing Pipeline**: Automatic optimization with KTX2, Draco, and Meshopt variants - **Real-time Collaboration**: Server-Sent Events for live scene updates - **Optimistic Locking**: If-Match headers for safe concurrent editing - **Category-based Organization**: Enhanced scene manifests with filtering capabilities - **Processing Queue**: Background asset processing with status tracking  ## Authentication All endpoints require Bearer token authentication unless explicitly marked as public.  ## Rate Limiting - General API: 100 requests per 15 minutes per IP - Authentication: 5 attempts per 15 minutes per IP  ## Versioning Scene operations support optimistic locking via If-Match headers for safe concurrent editing.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@lumea.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * 
 * @export
 * @interface AssetDownloadInfo
 */
export interface AssetDownloadInfo {
    /**
     * Asset ID
     * @type {string}
     * @memberof AssetDownloadInfo
     */
    'assetId': string;
    /**
     * Category key
     * @type {string}
     * @memberof AssetDownloadInfo
     */
    'categoryKey': string;
    /**
     * Original filename
     * @type {string}
     * @memberof AssetDownloadInfo
     */
    'filename': string;
    /**
     * Presigned download URL
     * @type {string}
     * @memberof AssetDownloadInfo
     */
    'downloadUrl': string;
    /**
     * CDN URL if available
     * @type {string}
     * @memberof AssetDownloadInfo
     */
    'cdnUrl'?: string;
    /**
     * Asset variant
     * @type {string}
     * @memberof AssetDownloadInfo
     */
    'variant': AssetDownloadInfoVariantEnum;
    /**
     * File size in bytes
     * @type {number}
     * @memberof AssetDownloadInfo
     */
    'fileSize': number;
    /**
     * Content type
     * @type {string}
     * @memberof AssetDownloadInfo
     */
    'contentType': string;
    /**
     * Cache headers
     * @type {object}
     * @memberof AssetDownloadInfo
     */
    'cacheHeaders': object;
    /**
     * URL expiration timestamp
     * @type {string}
     * @memberof AssetDownloadInfo
     */
    'expiresAt': string;
}

export const AssetDownloadInfoVariantEnum = {
    Original: 'original',
    Meshopt: 'meshopt',
    Draco: 'draco',
    Navmesh: 'navmesh'
} as const;

export type AssetDownloadInfoVariantEnum = typeof AssetDownloadInfoVariantEnum[keyof typeof AssetDownloadInfoVariantEnum];


