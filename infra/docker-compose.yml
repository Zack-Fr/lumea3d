
services:
  db:
    image: postgres:17
    container_name: lumea-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-lumea_db}
    ports:
      - "5434:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: 
      context: ..
      dockerfile: ./apps/api/Dockerfile
      target: development
    container_name: lumea-api
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/lumea_db
      JWT_SECRET: ${JWT_SECRET:-change-me-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-change-me-refresh-in-production}
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3000
      # API configuration
      API_BASE_URL: ${API_BASE_URL:-http://192.168.1.10:3000}
      # Storage configuration
      STORAGE_PROVIDER: ${STORAGE_PROVIDER:-minio}
      STORAGE_ENDPOINT: ${STORAGE_ENDPOINT:-http://minio:9000}
      STORAGE_EXTERNAL_ENDPOINT: ${STORAGE_EXTERNAL_ENDPOINT:-http://192.168.1.10:9000}
      STORAGE_REGION: ${STORAGE_REGION:-us-east-1}
      STORAGE_BUCKET_NAME: ${STORAGE_BUCKET_NAME:-lumea-assets}
      STORAGE_ACCESS_KEY: ${STORAGE_ACCESS_KEY:-minioadmin}
      STORAGE_SECRET_KEY: ${STORAGE_SECRET_KEY:-minioadmin123}
      # Redis configuration for job queue
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    ports:
      - "0.0.0.0:3000:3000"  # Bind to all interfaces for network access
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/monitoring/health"]
      interval: 30s
      timeout: 10s
      retries: 3


  minio:
    image: minio/minio:latest
    container_name: lumea-minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    ports:
      - "0.0.0.0:${MINIO_PORT:-9000}:9000"  # Bind to all interfaces for network access
      - "0.0.0.0:${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  minio-init:
    image: minio/mc:latest
    container_name: lumea-minio-init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set minio http://minio:9000 ${MINIO_ROOT_USER:-minioadmin} ${MINIO_ROOT_PASSWORD:-minioadmin123};
      mc mb minio/lumea-assets --ignore-existing;
      mc anonymous set public minio/lumea-assets;
      echo 'MinIO bucket lumea-assets created and configured';
      exit 0;
      "

  web:
    build: 
      context: ..
      dockerfile: ./apps/web/Dockerfile
      target: production
      args:
        VITE_API_URL: ${VITE_API_URL:-http://192.168.1.10:3000}
    container_name: lumea-web
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://192.168.1.10:3000}
    ports:
      - "0.0.0.0:${WEB_PORT:-80}:80"  # Bind to all interfaces for network access
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: lumea-redis
    ports:
      - "0.0.0.0:${REDIS_PORT:-6379}:6379"  # Bind to all interfaces for network access
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  pgdata:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: lumea-network